name: "Release Bottles"

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [macos-15, macos-14, macos-13]
        arch: [arm64, x86_64]
        # x86_64はmacOS 15では対応していないため除外
        exclude:
          - os: macos-15
            arch: x86_64
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Homebrew and tap
        run: |
          brew update --auto-update
          brew tap lgpl-dev/ffmpeg-lgpl

      - name: Install formula
        run: brew install ffmpeg-lgpl --build-bottle

      - name: Build bottle
        id: bottle
        run: |
          # brew bottleを実行し、JSONファイルとボトルファイルを生成
          brew bottle --json --no-rebuild ffmpeg-lgpl
          
          # 生成されたファイル名を特定
          JSON_FILE=$(ls -1 *.json | head -n 1)
          BOTTLE_FILENAME=$(ls -1 *.tar.gz | head -n 1)

          # JSONファイルの内容をデバッグログに出力
          echo "--- DEBUG: JSON file content ---"
          cat "$JSON_FILE"

          # 後続のステップで利用できるよう、出力として設定
          echo "BOTTLE_FILENAME=$BOTTLE_FILENAME" >> $GITHUB_OUTPUT
          echo "JSON_FILENAME=$JSON_FILE" >> $GITHUB_OUTPUT

      - name: Create or get release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # FormulaのバージョンをJSONファイルから取得
          FORMULA_VERSION=$(jq -r '.[].formula.pkg_version' "${{ steps.bottle.outputs.JSON_FILENAME }}")
          
          # リリースの存在をチェック
          RELEASE_INFO=$(gh release view v"$FORMULA_VERSION" --json url 2>/dev/null || true)
          
          # リリースが存在しない場合のみ作成
          if [[ -z "$RELEASE_INFO" ]]; then
            gh release create "v$FORMULA_VERSION" \
              --title "ffmpeg-lgpl v$FORMULA_VERSION" \
              --notes "New bottles for ffmpeg-lgpl."
          fi
          
      - name: Upload assets to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FORMULA_VERSION=$(jq -r '.[].formula.pkg_version' "${{ steps.bottle.outputs.JSON_FILENAME }}")
          
          gh release upload "v$FORMULA_VERSION" \
            "${{ steps.bottle.outputs.BOTTLE_FILENAME }}" \
            "${{ steps.bottle.outputs.JSON_FILENAME }}"
