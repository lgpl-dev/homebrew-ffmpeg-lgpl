name: "Release Bottles"

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [macos-15, macos-14, macos-13]
        arch: [arm64, x86_64]
        exclude:
          - os: macos-15
            arch: x86_64
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Homebrew and tap
        run: |
          # Use 'arch' to run the Homebrew command in the specified architecture environment
          if [ "${{ matrix.arch }}" == "x86_64" ]; then
            arch -x86_64 brew update --auto-update
            arch -x86_64 brew tap lgpl-dev/ffmpeg-lgpl
          else
            brew update --auto-update
            brew tap lgpl-dev/ffmpeg-lgpl
          fi

      - name: Install formula and build bottle
        id: bottle
        run: |
          # Install and build the formula in the correct architecture environment
          if [ "${{ matrix.arch }}" == "x86_64" ]; then
            arch -x86_64 brew install ffmpeg-lgpl --build-bottle
            arch -x86_64 brew bottle --json --no-rebuild ffmpeg-lgpl
          else
            brew install ffmpeg-lgpl --build-bottle
            brew bottle --json --no-rebuild ffmpeg-lgpl
          fi
          
          # Get file names and formula version from the generated JSON
          JSON_FILE=$(ls -1 *.json | head -n 1)
          BOTTLE_FILENAME=$(ls -1 *.tar.gz | head -n 1)

          # Debugging: show JSON content
          echo "--- DEBUG: JSON file content ---"
          cat "$JSON_FILE"

          # Set outputs for subsequent steps
          FORMULA_VERSION=$(jq -r '.[].formula.pkg_version' "$JSON_FILE")
          echo "BOTTLE_FILENAME=$BOTTLE_FILENAME" >> $GITHUB_OUTPUT
          echo "JSON_FILENAME=$JSON_FILE" >> $GITHUB_OUTPUT
          echo "FORMULA_VERSION=$FORMULA_VERSION" >> $GITHUB_OUTPUT
          
      - name: Create or get release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FORMULA_VERSION=${{ steps.bottle.outputs.FORMULA_VERSION }}
          RELEASE_INFO=$(gh release view v"$FORMULA_VERSION" --json url 2>/dev/null || true)
          
          if [[ -z "$RELEASE_INFO" ]]; then
            gh release create "v$FORMULA_VERSION" \
              --title "ffmpeg-lgpl v$FORMULA_VERSION" \
              --notes "New bottles for ffmpeg-lgpl."
          fi
          
      - name: Upload assets to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FORMULA_VERSION=${{ steps.bottle.outputs.FORMULA_VERSION }}
          
          gh release upload "v$FORMULA_VERSION" \
            "${{ steps.bottle.outputs.BOTTLE_FILENAME }}" \
            "${{ steps.bottle.outputs.JSON_FILENAME }}" \
            --clobber
