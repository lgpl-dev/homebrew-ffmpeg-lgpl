name: "Test Bottle File Search"

on:
  workflow_dispatch:

jobs:
  debug_search:
    runs-on: macos-14
    strategy:
      matrix:
        os: [macos-15, macos-14, macos-13]
        arch: [arm64, x86_64]
        exclude:
          - os: macos-15
            arch: x86_64
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for existing bottle
        id: check_bottle
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          FORMULA_NAME="ffmpeg-lgpl"
          FORMULA_FILE="ffmpeg-lgpl.rb"
          
          # バージョンとリビジョンをファイルから抽出
          FORMULA_VERSION=$(grep 'url' "$FORMULA_FILE" | grep -o 'ffmpeg-.*\.tar\.[gx]z' | sed 's/ffmpeg-//' | sed 's/\.tar\..*//')
          FORMULA_REVISION=$(grep -E '^\s*revision\s+' "$FORMULA_FILE" | awk '{print $2}')
          if [[ -z "$FORMULA_REVISION" ]]; then
            FORMULA_REVISION="0"
          fi
          
          if [ "$FORMULA_REVISION" == "0" ]; then
            RELEASE_TAG="v$FORMULA_VERSION"
          else
            RELEASE_TAG="v${FORMULA_VERSION}_${FORMULA_REVISION}"
          fi
          
          # OSとアーキテクチャのタグを作成
          OS_VERSION="${{ matrix.os }}"
          if [ "$OS_VERSION" == "macos-15" ]; then
            OS_TAG="sequoia"
          elif [ "$OS_VERSION" == "macos-14" ]; then
            OS_TAG="sonoma"
          elif [ "$OS_VERSION" == "macos-13" ]; then
            OS_TAG="ventura"
          else
            OS_TAG=$(echo "$OS_VERSION" | sed 's/macos-//')
          fi

          ARCH_TAG="${{ matrix.arch }}"
          
          # 期待されるファイル名を作成
          FILE_NAME="${FORMULA_NAME}-${FORMULA_VERSION}_${FORMULA_REVISION}.${ARCH_TAG}_${OS_TAG}.bottle.tar.gz"
          FILE_NAME=$(echo "$FILE_NAME" | sed 's/--/-/g')
          
          echo "Expected file: $FILE_NAME"
          
          # リリースからファイルを検索
          RELEASE_ASSETS=$(gh release view "$RELEASE_TAG" --json assets 2>/dev/null || true)
          
          if [[ "$RELEASE_ASSETS" == *"$FILE_NAME"* ]]; then
            echo "::set-output name=skip::true"
            echo "--- Bottle for this configuration exists. Test passed. ---"
          else
            echo "::set-output name=skip::false"
            echo "--- Bottle for this configuration does not exist. Test failed. ---"
          fi
